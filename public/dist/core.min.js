"use strict";
(self["webpackChunkbud_went"] = self["webpackChunkbud_went"] || []).push([["/public/dist/core"],{

/***/ "./src/js/classes/Core.js":
/*!********************************!*\
  !*** ./src/js/classes/Core.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Core)
/* harmony export */ });
/* harmony import */ var _LiteEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LiteEvents */ "./src/js/classes/LiteEvents.js");
/* harmony import */ var _MobileMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MobileMenu */ "./src/js/classes/MobileMenu.js");
/* harmony import */ var _HomeServicesSwiper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HomeServicesSwiper */ "./src/js/classes/HomeServicesSwiper.js");
/* harmony import */ var _shared_test__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared/test */ "./src/js/classes/shared/test.js");
/* harmony import */ var _shared_HeaderScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/HeaderScroll */ "./src/js/classes/shared/HeaderScroll.js");


// import BasicSlider from './BasicSlider';



class Core {
  constructor() {
    new _LiteEvents__WEBPACK_IMPORTED_MODULE_0__["default"]();
    new _MobileMenu__WEBPACK_IMPORTED_MODULE_1__["default"]();
    new _shared_HeaderScroll__WEBPACK_IMPORTED_MODULE_4__["default"]();
    // new BasicSlider();

    new _shared_test__WEBPACK_IMPORTED_MODULE_3__["default"]();
    new _HomeServicesSwiper__WEBPACK_IMPORTED_MODULE_2__["default"]();
  }
}

// import { trigger } from '../helpers/event';

// import HomeServicesSwiper from './HomeServicesSwiper';
// import { Test } from './shared/test';

// import LiteEvents from './LiteEvents';
// import Calendar from "./Calendar";
// // import LockScroll from './LockScroll';
// import Viewport from './Viewport';
// import ScrollTo from './ScrollTo';
// // import Header from './Header';
// import HeaderSearch from './HeaderSearch';
// import MobileMenu from './MobileMenu';
// // import Drawer from './Drawer';
// // import Toggle from './Toggle';
// import Tabs from './Tabs';
// // import Accordion from './Accordion';
// // import InputLabel from './InputLabel';
// // import CustomScroll from './CustomScroll';
// // import CustomSelect from './CustomSelect';
// // import HeaderCollision from './HeaderCollision';
// // import RequiredFields from './RequiredFields';
// import VideoPoster from './VideoPoster';
// // import HeroBanner from './HeroBanner';
// // import TextGapImageSlider from './TextGapImageSlider';
// // import PuffTabs from './PuffTabs';
// // import PuffNestedSlider from './PuffNestedSlider';
// import BasicSlider from './BasicSlider';
// import ScrollAnim from './ScrollAnim';
// import Validator from './Validator';
// import TooltipArea from './TooltipArea';
// // import Analytics from './Analytics';
// // import ImagePreview from './ImagePreview';
// // import ImagePreviewPopup from './ImagePreviewPopup';
// // import Popup from './Popup';
// // import VideoPopup from './VideoPopup';
// import LogoAutoSlider from './LogoAutoSlider';
// import ProductsFilters from './ProductsFilters';

// export default class Core {
//   constructor() {
//     window.triggerEvent = trigger;

//     new Test();

//     new HomeServicesSwiper();
//     new Calendar();
//     new LiteEvents();
//     // new LockScroll();
//     new Viewport();
//     new ScrollTo();
//     // new Header();
//     new HeaderSearch();
//     new MobileMenu();
//     // new Drawer();
//     // new Toggle();
//     new Tabs();
//     // new Accordion();
//     // new InputLabel();
//     // new CustomScroll();
//     // new CustomSelect();
//     // new HeaderCollision();
//     // new RequiredFields();;
//     new VideoPoster();
//     // new HeroBanner();
//     // new TextGapImageSlider();
//     // new PuffTabs();
//     // new PuffNestedSlider();
//     new BasicSlider();
//     new ScrollAnim();
//     new Validator();
//     new TooltipArea();
//     // new Analytics();
//     // new Popup();
//     // new VideoPopup();
//     // new ImagePreview();
//     // new ImagePreviewPopup();
//     new LogoAutoSlider();
//     new ProductsFilters();
//   }
// }

/***/ }),

/***/ "./src/js/classes/HomeServicesSwiper.js":
/*!**********************************************!*\
  !*** ./src/js/classes/HomeServicesSwiper.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ServicesSwiper)
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! swiper */ "./node_modules/swiper/esm/components/core/core-class.js");
/* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swiper */ "./node_modules/swiper/esm/components/pagination/pagination.js");
/* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! swiper */ "./node_modules/swiper/esm/components/navigation/navigation.js");
/* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! swiper */ "./node_modules/swiper/esm/components/thumbs/thumbs.js");
/* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! swiper */ "./node_modules/swiper/esm/components/effect-fade/effect-fade.js");
/* harmony import */ var _shared_Entities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/Entities */ "./src/js/classes/shared/Entities.js");



swiper__WEBPACK_IMPORTED_MODULE_2__["default"].use([swiper__WEBPACK_IMPORTED_MODULE_3__["default"], swiper__WEBPACK_IMPORTED_MODULE_4__["default"], swiper__WEBPACK_IMPORTED_MODULE_5__["default"], swiper__WEBPACK_IMPORTED_MODULE_6__["default"]]);
class ServicesSwiperEntity {
  constructor(rootEl) {
    console.log("before seVars");
    if (!this.setVars(rootEl)) return;
    console.log("after seVars");
    this.initSwipers();
  }
  setVars(rootEl) {
    this.rootEl = rootEl;
    if (!this.rootEl) return false;
    this.thumbsSliderEl = this.rootEl.querySelector('#services-swiper-thumbs');
    if (!this.thumbsSliderEl) return false;
    this.mainSliderEl = this.rootEl.querySelector('#services-swiper');
    if (!this.mainSliderEl) return false;
    console.log(this.mainSliderEl);
    console.log(this.thumbsSliderEl);
    return true;
  }
  initSwipers() {
    // Initialize thumbs swiper
    var thumbsServicesSwiper = new swiper__WEBPACK_IMPORTED_MODULE_2__["default"](this.thumbsSliderEl, {
      loop: false,
      spaceBetween: 2,
      slidesPerView: 3,
      freeMode: true,
      watchSlidesProgress: true
    });

    // Initialize main swiper
    this.mainServicesSwiper = new swiper__WEBPACK_IMPORTED_MODULE_2__["default"](this.mainSliderEl, {
      loop: false,
      effect: 'fade',
      allowTouchMove: false,
      centeredSlides: true,
      thumbs: {
        swiper: thumbsServicesSwiper
      }
    });
    document.querySelectorAll(".accordion-services").forEach(accordionElement => {
      new Accordion("#".concat(accordionElement.id), {
        openOnInit: [0]
      });
      console.log("accordionElement ", accordionElement.id, " initialized");
    });
  }
}
class ServicesSwiper {
  constructor() {
    this.entities = new _shared_Entities__WEBPACK_IMPORTED_MODULE_1__["default"]('ServicesSwiper', '#homeServices', ServicesSwiper.initSingle);
  }
  static initSingle(element) {
    return new ServicesSwiperEntity(element);
  }
}
document.addEventListener('DOMContentLoaded', () => {
  new ServicesSwiper();
});

/***/ }),

/***/ "./src/js/classes/LiteEvents.js":
/*!**************************************!*\
  !*** ./src/js/classes/LiteEvents.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LiteEvents)
/* harmony export */ });
class LiteEvents {
  constructor() {
    this.setEvents();
    this.onScrollThrottle();
  }
  setEvents() {
    this.bindScroll();
    this.bindResize();
  }
  bindScroll() {
    this.onScroll = this.onScroll.bind(this);
    this.onScrollThrottle = this.onScrollThrottle.bind(this);
    window.addEventListener('scroll', this.onScrollThrottle);
  }
  onScrollThrottle() {
    if (this.waitScroll) return;
    this.waitScroll = true;
    this.rafScroll = requestAnimationFrame(this.onScroll);
  }
  onScroll() {
    var scrollTop = window.scrollY || window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop || 0;
    window.dispatchEvent(new CustomEvent('liteScroll', {
      detail: {
        scrollTop
      }
    }));
    this.waitScroll = false;
  }
  bindResize() {
    this.onResize = this.onResize.bind(this);
    this.onResizeThrottle = this.onResizeThrottle.bind(this);
    window.addEventListener('resize', this.onResizeThrottle);
  }
  onResizeThrottle() {
    if (this.waitResize) return;
    this.waitResize = true;
    this.rafResize = requestAnimationFrame(this.onResize);
  }
  onResize() {
    var windowWidth = window.innerWidth;
    window.dispatchEvent(new CustomEvent('liteResize', {
      detail: {
        windowWidth
      }
    }));
    this.waitResize = false;
  }
}

/***/ }),

/***/ "./src/js/classes/MobileMenu.js":
/*!**************************************!*\
  !*** ./src/js/classes/MobileMenu.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MobileMenu)
/* harmony export */ });
/* harmony import */ var _helpers_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/array */ "./src/js/helpers/array.js");
/* harmony import */ var _helpers_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/dom */ "./src/js/helpers/dom.js");
/* harmony import */ var _helpers_document__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/document */ "./src/js/helpers/document.js");



class MobileMenu {
  constructor() {
    // if (!MobileMenu.init()) return;
    MobileMenu.init();
  }
  static init() {
    var menuEl = document.querySelector('[data-mobile-menu]');
    if (!menuEl) return false;
    var buttonsArr = document.querySelectorAll('[data-mobile-menu-button]');
    if (!buttonsArr) return false;

    // const closeButtonEl = menuEl.querySelector('[data-mobile-menu-close]');
    // if (!closeButtonEl) return false;

    // this.rtlSign = rtlSign;

    var isActive = menuEl.getAttribute('data-active') !== null;

    // this.expandedItemId = null;

    // this.duration = 200;

    // methods

    function open() {
      if (isActive) return;
      (0,_helpers_dom__WEBPACK_IMPORTED_MODULE_1__.setAttr)(menuEl, 'data-active', '');
      isActive = true;

      // eslint-disable-next-line no-use-before-define
      document.addEventListener('click', onClickOutside);
    }
    function close() {
      if (!isActive) return;
      (0,_helpers_dom__WEBPACK_IMPORTED_MODULE_1__.setAttr)(menuEl, 'data-active', null);
      isActive = false;

      // eslint-disable-next-line no-use-before-define
      document.removeEventListener('click', onClickOutside);
    }
    function toggle() {
      if (isActive) {
        close();
      } else {
        open();
      }
    }
    function onClickOutside(e) {
      if (e.target.closest('[data-mobile-menu]') === menuEl
      // || (e.target.closest('[data-mobile-menu-close]') === closeButtonEl)
      || e.target.closest('[data-mobile-menu-button]') !== null) return;
      close();
    }
    function onButtonClick(e) {
      e.preventDefault();
      toggle();
    }

    // function onCloseButtonClick(e) {
    //   e.preventDefault();
    //   close();
    // }

    (0,_helpers_array__WEBPACK_IMPORTED_MODULE_0__.each)(buttonsArr, buttonEl => {
      buttonEl.addEventListener('click', onButtonClick);
    });
    // if (closeButtonEl) closeButtonEl.addEventListener('click', onCloseButtonClick);

    function destroy() {
      (0,_helpers_array__WEBPACK_IMPORTED_MODULE_0__.each)(buttonsArr, buttonEl => {
        buttonEl.removeEventListener('click', onButtonClick);
      });
      // if (closeButtonEl) closeButtonEl.removeEventListener('click', onCloseButtonClick);
    }
    return {
      open,
      close,
      toggle,
      destroy
    };
  }

  // getItemObjsArr(linksArr) {
  //   return mapEach(linksArr, (linkEl) => {
  //     const id = linkEl.getAttribute('data-mobile-menu-link');
  //     const itemEl = this.itemsEl.querySelector(`[data-mobile-menu-item="${id}"]`);
  //     const submenuEl = this.itemsEl.querySelector(`[data-mobile-menu-submenu="${id}"]`);
  //     const backButtonEl = this.itemsEl.querySelector(`[data-mobile-menu-back="${id}"]`);

  //     return {
  //       id,
  //       itemEl,
  //       linkEl,
  //       submenuEl,
  //       backButtonEl,
  //     };
  //   });
  // }

  // getItemObjById(itemId) {
  //   return this.itemObjsArr.find(itemObj => itemObj.id === itemId);
  // }
}

/***/ }),

/***/ "./src/js/classes/shared/Entities.js":
/*!*******************************************!*\
  !*** ./src/js/classes/shared/Entities.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Entities)
/* harmony export */ });
/* harmony import */ var _helpers_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/array */ "./src/js/helpers/array.js");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

class Entities {
  /**
   * Entities constructor
   * @param {String} name name of the entities set - events prefix
   * @param {String} selector single element selector
   * @param {Function} creator single object creator function
   * @param {Function} cleaner single object cleaner function
   * @param {Object} options additional options
   */
  constructor(name, selector) {
    var creator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => ({});
    var cleaner = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : () => {};
    var {
      filter = () => true
    } = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    this.name = name;
    this.selector = selector;
    this.creator = creator;
    this.cleaner = cleaner;
    this.filter = filter;
    this.entitiesArr = [];
    this.createNew();
    this.bindEvents();
  }
  createNew() {
    var prevEntitiesArr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var rawElementsArr = document.querySelectorAll(this.selector);
    if (rawElementsArr.length <= 0) return prevEntitiesArr;
    var elementsArr = Array.prototype.filter.call(rawElementsArr, this.filter);
    this.entitiesArr = [];
    (0,_helpers_array__WEBPACK_IMPORTED_MODULE_0__.each)(elementsArr, element => {
      var prevEntity = prevEntitiesArr.find(entity => entity.element === element);
      if (prevEntity !== undefined) {
        this.entitiesArr.push(prevEntity);
        return true;
      }
      this.entitiesArr.push({
        element,
        entityObj: this.creator(element)
      });
    });
    return this.entitiesArr;
  }
  destroyAll() {
    (0,_helpers_array__WEBPACK_IMPORTED_MODULE_0__.each)(this.entitiesArr, entity => {
      this.cleaner(entity);
      entity.entityObj = null;
    });
    this.entitiesArr = [];
  }
  bindEvents() {
    this.onCreateNewEvent = this.onCreateNew.bind(this);
    // window.addEventListener(`${this.name}CreateNew`, this.onCreateNewEvent);
    Entities.bindEvent('EntitiesCreateNew', this.name, this.onCreateNewEvent);
    this.onDestroyAllEvent = this.onDestroyAll.bind(this);
    // window.addEventListener(`${this.name}DestroyAll`, this.onDestroyAllEvent);
    Entities.bindEvent('EntitiesDestroyAll', this.name, this.onDestroyAllEvent);
    this.onRefreshEvent = this.onRefresh.bind(this);
    // window.addEventListener(`${this.name}Refresh`, this.onRefreshEvent);
    Entities.bindEvent('EntitiesRefresh', this.name, this.onRefreshEvent);
  }
  onCreateNew() {
    this.createNew(this.entitiesArr);
  }
  onDestroyAll() {
    this.destroyAll();
  }
  onRefresh() {
    this.refresh();
  }
  refresh() {
    this.destroyAll();
    this.createNew();
  }
  getEntityByEl(element) {
    return this.entitiesArr.find(entity => entity.element === element);
  }
  getAll() {
    return this.entitiesArr;
  }
  forEachEntity(callback) {
    (0,_helpers_array__WEBPACK_IMPORTED_MODULE_0__.each)(this.entitiesArr, callback);
  }
  static bindGlobalEvents() {
    if (Entities.eventsReady) return;
    window.addEventListener('EntitiesCreateNew', Entities.onEntitiesEvent);
    window.addEventListener('EntitiesDestroyAll', Entities.onEntitiesEvent);
    window.addEventListener('EntitiesRefresh', Entities.onEntitiesEvent);
    Entities.eventsReady = true;
  }
  static bindEvent(eventName, name, handler) {
    if (Entities.events[eventName] === undefined) Entities.events[eventName] = {};
    Entities.events[eventName][name] = handler;
  }
  static unbindEvent(type, name) {
    if (Entities.events[type] === undefined) return;
    delete Entities.events[type][name];
  }
  static trigger(eventName, name, payload) {
    window.dispatchEvent(new CustomEvent(eventName, {
      detail: {
        name,
        payload
      }
    }));
  }
  static onEntitiesEvent(e) {
    var eventName = e.type;
    var events = Entities.events[eventName];
    if (events === undefined) return;
    var {
      name
    } = e.detail;
    var handler = events[name];
    if (handler === undefined) return;
    handler(e);
  }
}
_defineProperty(Entities, "eventsReady", false);
_defineProperty(Entities, "events", {
  // EntitiesCreateNew: {},
  // EntitiesDestroyAll: {},
  // EntitiesRefresh: {},
});
Entities.bindGlobalEvents();

/***/ }),

/***/ "./src/js/classes/shared/HeaderScroll.js":
/*!***********************************************!*\
  !*** ./src/js/classes/shared/HeaderScroll.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ HeaderScroll)
/* harmony export */ });
class HeaderScrollEntity {
  constructor(rootEl) {
    if (!this.setVars(rootEl)) return;
    this.init();
  }
  setVars(rootEl) {
    this.rootEl = rootEl;
    if (!this.rootEl) {
      return false;
    }
    return true;
  }
  init() {
    window.addEventListener("scroll", function () {
      var header = document.querySelector("header");
      if (window.scrollY > 60) {
        header.classList.add("scroll");
      } else {
        header.classList.remove("scroll");
      }
    });
  }
}
class HeaderScroll {
  constructor(rootEl) {
    var rootElement = document.querySelector('header');
    this.header = new HeaderScrollEntity(rootElement);
  }
  static initSingle(element) {
    return new HeaderScrollEntity(element);
  }
}

/***/ }),

/***/ "./src/js/classes/shared/test.js":
/*!***************************************!*\
  !*** ./src/js/classes/shared/test.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Test)
/* harmony export */ });
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);

class TestEntity {
  constructor(rootEl) {
    if (!this.setVars(rootEl)) return;
    this.consoleTest();
  }
  setVars(rootEl) {
    this.rootEl = rootEl;
    if (!this.rootEl) {
      return false;
    }
    return true;
  }
  consoleTest() {
    console.log('TestEntity initialized for element:', this.rootEl);
  }
}
class Test {
  constructor(rootEl) {
    var rootElement = document.querySelector('#my-element');
    this.test = new TestEntity(rootElement);
  }
  static initSingle(element) {
    return new TestEntity(element);
  }
}

/***/ }),

/***/ "./src/js/core.js":
/*!************************!*\
  !*** ./src/js/core.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.url.js */ "./node_modules/core-js/modules/web.url.js");
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_web_url_to_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/web.url.to-json.js */ "./node_modules/core-js/modules/web.url.to-json.js");
/* harmony import */ var core_js_modules_web_url_to_json_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_to_json_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.url-search-params.js */ "./node_modules/core-js/modules/web.url-search-params.js");
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _classes_Core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./classes/Core */ "./src/js/classes/Core.js");
/* harmony import */ var _helpers_ready__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers/ready */ "./src/js/helpers/ready.js");




// import './vendors/polyfills/customEvents';
// import './vendors/polyfills/element/closest';




// based on https://github.com/webpack/webpack/issues/7968#issuecomment-417639911
var url = new URL(document.currentScript.src);
var widgetLink = url.href.substring(0, url.href.indexOf('/public/dist') + 1);
__webpack_require__.p = widgetLink; // eslint-disable-line

(0,_helpers_ready__WEBPACK_IMPORTED_MODULE_5__.ready)(() => new _classes_Core__WEBPACK_IMPORTED_MODULE_4__["default"]());

/***/ }),

/***/ "./src/js/helpers/array.js":
/*!*********************************!*\
  !*** ./src/js/helpers/array.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   each: () => (/* binding */ each),
/* harmony export */   mapEach: () => (/* binding */ mapEach)
/* harmony export */ });
/**
 * iterates through array items, call the function for each of them
 * @param {array} array array of items
 * @param {function} callback function to call for each item
 * @info break - return the false value to break the loop
 * @info continue - return the true value to skip current item
 */
function each(array, callback) {
  var l = array.length;
  for (var i = 0; i < l; i++) {
    var result = callback(array[i], i);
    if (result === false) break;
    if (result === true) continue;
  }
}

/**
 * iterates through array items, map each of them
 * @param {array} array array of items
 * @param {function} callback mapping function for each item
 * @returns {array} array of mapped items
 */
function mapEach(array, callback) {
  var resultArr = [];
  var l = array.length;
  for (var i = 0; i < l; i++) {
    resultArr[i] = callback(array[i], i);
  }
  return resultArr;
}
/* harmony default export */ __webpack_exports__["default"] = ({
  each,
  mapEach
});

/***/ }),

/***/ "./src/js/helpers/document.js":
/*!************************************!*\
  !*** ./src/js/helpers/document.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkRwd: () => (/* binding */ checkRwd),
/* harmony export */   isRtl: () => (/* binding */ isRtl),
/* harmony export */   rtlSign: () => (/* binding */ rtlSign),
/* harmony export */   scrollTop: () => (/* binding */ scrollTop)
/* harmony export */ });
/**
 * get or set scrollTop value
 * @param {number} value the scrollTop value to set
 * @returns {number|null} current scrollTop value if not passed value, null if passed
 */
function scrollTop(value) {
  if (value) {
    document.body.scrollTop = value;
    document.documentElement.scrollTop = value;
    return null;
  }
  return window.scrollY || window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop || 0;
}

/* eslint-disable quote-props */
// keep sync with src\scss\tools\rwd.scss
var RWD_BREAKPOINTS = {
  'phone': 360,
  'large-phone': 480,
  'small-tablet': 600,
  'tablet': 768,
  'large-tablet': 1024,
  'laptop': 1280,
  'large-laptop': 1366,
  'ultra': 1600
};
/* eslint-enable quote-props */
/**
 * checks that breakpoint is fulfilled or not
 * @param {string} breakpoint breakpoint name
 * @returns {boolean} info that breakpoint is fulfilled or not
 */
function checkRwd(breakpoint) {
  var width = RWD_BREAKPOINTS[breakpoint];
  if (width === undefined) return false;
  return window.innerWidth >= width;
}
var isRtl = document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl';
var rtlSign = isRtl ? -1 : 1;
/* harmony default export */ __webpack_exports__["default"] = ({
  scrollTop,
  checkRwd,
  isRtl,
  rtlSign
});

/***/ }),

/***/ "./src/js/helpers/dom.js":
/*!*******************************!*\
  !*** ./src/js/helpers/dom.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setAttr: () => (/* binding */ setAttr),
/* harmony export */   setAttrs: () => (/* binding */ setAttrs),
/* harmony export */   setClassName: () => (/* binding */ setClassName),
/* harmony export */   setStyle: () => (/* binding */ setStyle),
/* harmony export */   setStyles: () => (/* binding */ setStyles)
/* harmony export */ });
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./src/js/helpers/array.js");


/**
 * conditional set css class name on the element
 * @param {element} el DOM element
 * @param {string} className css class name to set
 * @param {boolean} status required status of class
 */
function setClassName(el, className) {
  var status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  if (status) {
    el.classList.add(className);
  } else {
    el.classList.remove(className);
  }
}

/**
 * set data attributes on the element
 * @param {element} el DOM element
 * @param {string} key attribute key
 * @param {string|null} value attribute value
 * @param {string} prefix attribute key prefix
 */
function setAttr(el, key) {
  var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var prefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
  if (value === null) {
    el.removeAttribute(prefix + key);
  } else {
    el.setAttribute(prefix + key, value);
  }
}

/**
 * set data attributes on the element
 * @param {element} el DOM element
 * @param {object} attrsObj attributes object { attrKey: attrValue }
 * @param {string} prefix attributes key prefix
 */
function setAttrs(el, attrsObj) {
  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  (0,_array__WEBPACK_IMPORTED_MODULE_0__.each)(Object.keys(attrsObj), attrKey => {
    setAttr(el, attrKey, attrsObj[attrKey], prefix);
  });
}

/**
 * set styles on the element
 * @param {element} el DOM element
 * @param {string} key style key
 * @param {string} value style value
 */
function setStyle(el, key, value) {
  el.style[key] = value;
}

/**
 * set styles on the element
 * @param {element} el DOM element
 * @param {object} stylesObj styles object { styleKey: styleValue }
 */
function setStyles(el, stylesObj) {
  (0,_array__WEBPACK_IMPORTED_MODULE_0__.each)(Object.keys(stylesObj), styleKey => {
    setStyle(el, styleKey, stylesObj[styleKey]);
  });
}
/* harmony default export */ __webpack_exports__["default"] = ({
  setClassName,
  setAttr,
  setAttrs,
  setStyle,
  setStyles
});

/***/ }),

/***/ "./src/js/helpers/ready.js":
/*!*********************************!*\
  !*** ./src/js/helpers/ready.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ready: () => (/* binding */ ready)
/* harmony export */ });
var ready = fn => {
  if (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {
    fn();
  } else {
    document.addEventListener('DOMContentLoaded', fn);
  }
};

/***/ }),

/***/ "./src/scss/core.scss":
/*!****************************!*\
  !*** ./src/scss/core.scss ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["public/dist/core","/public/dist/vendor"], () => (__webpack_exec__("./src/js/core.js"), __webpack_exec__("./src/scss/core.scss")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,